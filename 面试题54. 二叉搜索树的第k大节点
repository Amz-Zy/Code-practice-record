/*
给定一棵二叉搜索树，请找出其中第k大的节点。
输入: root = [3,1,4,null,2], k = 1
   3
  / \
 1   4
  \
   2
输出: 4
*/
/*
从右节点中序遍历，右子树为空则计数++，代表第几大的数，当计数等于K则代表找到第K大的数，返回root->val。
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


void visit(struct TreeNode* root, int k, int *num, int *val)
{
    if( root->right )   visit(root->right, k, num, val);
    (*num)++;
    if( *num == k ){
        *val = root->val;
        return;
    }
    if( root->left )   visit(root->left, k, num, val);
}

int kthLargest(struct TreeNode* root, int k){
    if( root == NULL ) return 0;
    int num=0;
    int val=0;
    visit(root, k, &num, &val);
    return val;
}
