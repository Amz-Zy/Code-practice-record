/*
根据 百度百科 ，生命游戏，简称为生命，是英国数学家约翰·何顿·康威在 1970 年发明的细胞自动机。
给定一个包含 m × n 个格子的面板，每一个格子都可以看成是一个细胞。每个细胞都具有一个初始状态：1 即为活细胞（live），或 0 即为死细胞（dead）。

每个细胞与其八个相邻位置（水平，垂直，对角线）的细胞都遵循以下四条生存定律：
如果活细胞周围八个位置的活细胞数少于两个，则该位置活细胞死亡；
如果活细胞周围八个位置有两个或三个活细胞，则该位置活细胞仍然存活；
如果活细胞周围八个位置有超过三个活细胞，则该位置活细胞死亡；
如果死细胞周围正好有三个活细胞，则该位置死细胞复活；

根据当前状态，写一个函数来计算面板上所有细胞的下一个（一次更新后的）状态。下一个状态是通过将上述规则同时应用于当前状态下的每个细胞所形成的，
其中细胞的出生和死亡是同时发生的。

建立一个新表m+2 * n+2 ，边上存0，统一化，避免边上重新编写代码，内部存board数据。
算出count，根据要求把修改后的数据存入board。
时间复杂度O（m*n）；空间复杂度（（m+2）*（n+2））。
*/



void gameOfLife(int** board, int boardSize, int* boardColSize){
    if(board == NULL || boardSize == 0) return;
    int hang = boardSize+2, lie = boardColSize[0]+2;
    int NewBoard[hang][lie];
    int i, j;
    for( i=0; i<hang; i++)
    {
        for( j=0; j<lie; j++)
        {
            if( i>=1 && j>=1 && i<=boardSize && j<=*boardColSize)
                NewBoard[i][j] = board[i-1][j-1];
            else
                NewBoard[i][j] = 0;
        }
    }

    int count;
    for( i=1; i<hang-1; i++)
    {
        for( j=1; j<lie-1; j++)
        {
            count = 0;
            if( NewBoard[i-1][j-1] == 1 )   count++;
            if( NewBoard[i-1][j] == 1 )     count++;
            if( NewBoard[i-1][j+1] == 1 )   count++;
            if( NewBoard[i][j-1] == 1 )     count++;
            if( NewBoard[i][j+1] == 1 )     count++;
            if( NewBoard[i+1][j-1] == 1 )   count++;
            if( NewBoard[i+1][j] == 1 )     count++;
            if( NewBoard[i+1][j+1] == 1 )   count++;
            if( NewBoard[i][j] == 0 ){
                if( count == 3 )    board[i-1][j-1] = 1;
                else                board[i-1][j-1] = 0;
            }else{
                if( count <= 1 )    board[i-1][j-1] = 0;
                else if( count > 3 )board[i-1][j-1] = 0;
                else                board[i-1][j-1] = 1;
            }
        }
    }
}
